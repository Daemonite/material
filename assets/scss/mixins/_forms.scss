@mixin form-validation-state($state, $color, $icon) {
  [class*='valid-feedback'] {
    @extend .form-text;

    display: none;
    width: 100%;
  }

  // stylelint-disable
  .#{$state}-feedback {
    color: $color;
  }
  // stylelint-enable

  .#{$state}-tooltip {
    @include border-radius($border-radius);

    background-color: $color;
    color: color-yiq($color);
    display: none;
    font-size: $tooltip-font-size;
    line-height: $tooltip-line-height;
    margin-top: $textfield-margin-y;
    max-width: 100%;
    opacity: $tooltip-opacity;
    padding: $tooltip-padding-y $tooltip-padding-x;
    position: absolute;
    top: 100%;
    left: 0;
    text-align: center;
    word-break: break-word;
    z-index: $tooltip-zindex;

    @include media-breakpoint-up(md) {
      font-size: $tooltip-font-size-desktop;
      padding: $tooltip-padding-y-desktop $tooltip-padding-x-desktop;
    }

    .form-control-lg + & {
      margin-top: $textfield-margin-y-lg;
    }

    .form-control-sm + & {
      margin-top: $textfield-margin-y-sm;
    }
  }

  .custom-control-input {
    &.is-#{$state},
    .was-validated &:#{$state} {
      ~ .custom-control-label {
        &,
        &::after {
          color: $color;
        }

        &::before {
          background-color: $color;
        }
      }

      ~ .custom-control-track {
        background-color: rgba($color, $selection-control-track-opacity);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .custom-file-input {
    &.is-#{$state},
    .was-validated &:#{$state} {
      @include hover-focus {
        ~ .custom-file-label {
          border-bottom-color: $color;
          box-shadow: inset 0 ($textfield-border-width-focus * -1) 0 ($textfield-border-width * -1) $color;
        }
      }

      ~ .custom-file-label {
        border-bottom-color: $color;

        @include hover {
          border-bottom-color: $color;
          box-shadow: inset 0 ($textfield-border-width-hover * -1) 0 ($textfield-border-width * -1) $color;
        }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .custom-switch .custom-control-input {
    &.is-#{$state},
    .was-validated &:#{$state} {
      ~ .custom-control-label::after {
        background-color: $color;
      }
    }
  }

  .form-check-input {
    &.is-#{$state},
    .was-validated &:#{$state} {
      + .form-check-label {
        color: $color;
      }
    }
  }

  %form-control {
    &.is-#{$state},
    .was-validated &:#{$state} {
      border-color: $color;

      // todo
      @if $enable-validation-icons {
        background-image: escape-svg($icon);
        background-position: center right; //center right $input-height-inner-quarter
        background-repeat: no-repeat;
        background-size: 1.5rem 1.5rem; //$input-height-inner-half $input-height-inner-half
        padding-right: $textfield-padding-x;
      }

      @include hover-focus {
        border-color: $color;
      }

      &:focus {
        box-shadow: inset 0 ($textfield-border-width-hover * -1) 0 ($textfield-border-width * -1) $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  %form-textarea {
    &.is-#{$state},
    .was-validated &:#{$state} {
      @include hover-focus {
        box-shadow: inset $textfield-border-width-hover $textfield-border-width-hover 0 ($textfield-border-width * -1) $color, inset ($textfield-border-width-hover * -1) ($textfield-border-width-hover * -1) 0 ($textfield-border-width * -1) $color;
      }
    }

    .textfield-box &.is-#{$state},
    .was-validated .textfield-box &:#{$state} {
      @include hover-focus {
        box-shadow: inset 0 ($textfield-border-width-hover * -1) 0 ($textfield-border-width * -1) $color;
      }
    }
  }
}
