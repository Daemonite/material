// TODO:  input-group-prepend or input-group-icon ? : bring icon within field

// stylelint-disable selector-no-qualifying-type

// Reset

fieldset {
  border: 0;
  margin-bottom: $spacer-lg;
  padding: 0;
}

legend {
  @extend label;

  margin-bottom: $spacer-sm;
}

%form-control {
  background-clip: padding-box;
  background-color: transparent;
  border-color: $textfield-border-color;
  border-radius: 0;
  border-style: solid;
  border-width: 0 0 $textfield-border-width;
  box-shadow: none;
  caret-color: selection-theme-color();
  color: $textfield-color;
  display: block;
  font-size: $textfield-font-size;
  // TODO height: $input-height;
  letter-spacing: $textfield-letter-spacing;
  line-height: $textfield-line-height;
  padding: $textfield-padding-y $textfield-padding-x calc(#{$textfield-padding-y} - #{$textfield-border-width});
  transition: border-color 15ms linear, box-shadow 180ms cubic-bezier(0.4, 0, 0.2, 1);
  width: 100%;

  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  &::placeholder {
    color: $textfield-placeholder-color;
    opacity: 1; /* needed for Firefox */
  }

  &:disabled,
  &[readonly] {
    border-style: dotted;
    color: $textfield-color-disabled;
    opacity: 1;

    @include hover-focus {
      border-color: $textfield-border-color;
      box-shadow: none;
    }
  }

  &:hover {
    border-color: $textfield-border-color-hover;
  }

  &:focus {
    border-color: $textfield-border-color-focus;
    box-shadow: inset 0 ($textfield-border-width-focus * -1) 0 ($textfield-border-width * -1) $textfield-border-color-focus;
    outline: 0;
  }

  &:invalid:required {
    outline: 0;
  }
}

.form-control {
  @extend %form-control;

  &[type='file'] {
    max-height: $textfield-height;
  }
}

input[type='date'],
input[type='time'],
input[type='datetime-local'],
input[type='month'] {
  &.form-control {
    appearance: none; // Fix appearance for date inputs in Safari
  }
}

// Form control sizing

.form-control-lg {
  font-size: $textfield-font-size-lg;
  // height: $input-height-lg;    TODO
  line-height: $textfield-line-height-lg;
  padding: $textfield-padding-y-lg $textfield-padding-x-lg calc(#{$textfield-padding-y-lg} - #{$textfield-border-width});

  &[type='file'] {
    max-height: $textfield-height-lg;
  }
}

.form-control-sm {
  font-size: $textfield-font-size-sm;
  // height: $input-height-sm;     TODO
  line-height: $textfield-line-height-sm;
  padding: $textfield-padding-y-sm $textfield-padding-x-sm calc(#{$textfield-padding-y-sm} - #{$textfield-border-width});

  &[type='file'] {
    max-height: $textfield-height-sm;
  }
}

// Select and textarea

%form-select {
  appearance: none;
  background: escape-svg($caret-bg) 100% 50%/#{$textfield-select-bg-size} $textfield-select-bg-size no-repeat;
  padding-right: $textfield-select-bg-size;
  transition: background-image 180ms;

  &[multiple],
  &[size]:not([size='1']) {
    background-image: none;
  }
}

%form-textarea {
  background-image: none !important; // stylelint-disable-line declaration-no-important
  border-color: $textfield-textarea-border-color;
  border-radius: $textfield-box-border-radius;
  border-width: $textfield-border-width;
  min-height: $textfield-box-height;
  padding: calc(#{$textfield-box-padding-y} - #{$textfield-border-width}) $textfield-box-padding-x;

  &:hover {
    border-color: $textfield-border-color-hover;
  }

  &:focus {
    border-color: $textfield-border-color-focus;
    box-shadow: inset $textfield-border-width-focus $textfield-border-width-focus 0 ($textfield-border-width * -1) $textfield-border-color-focus, inset ($textfield-border-width-focus * -1) ($textfield-border-width-focus * -1) 0 ($textfield-border-width * -1) $textfield-border-color-focus;
  }
}

select {
  &.form-control,
  &.custom-select {
    @extend %form-select;

    &[multiple],
    &[size]:not([size='1']) {
      @extend %form-textarea;
      //height: auto;  TODO
      padding: $spacer-sm 0;

      option {
        padding: 0 $spacer-lg;
      }
    }

    option {
      align-items: center;
      display: flex;
      font-size: $expansion-panel-font-size;
      height: $expansion-panel-height;
      letter-spacing: $expansion-panel-letter-spacing;
      //line-height: 1.5rem !important;

      &:hover {
        background-color: rgba($black, $overlay-hover-white-opacity);
      }

      &:active {
        background-color: rgba($black, $overlay-activated-white-opacity) !important; // stylelint-disable-line declaration-no-important
      }
    }

    // Remove select outline from select box in FF
    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 $textfield-color; // TODO
    }

    &:focus { // stylelint-disable-line order/order
      background-image: escape-svg(url('data:image/svg+xml;charset=utf8,<svg fill="#{selection-theme-color()}" transform="rotate(180)" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><animateTransform attributeName="transform" attributeType="XML" type="rotate" from="0 0 0" to="180 0 0" dur="250ms"/></svg>'));
    }
  }

  &.form-control-lg {
    &[multiple],
    &[size]:not([size='1']) {
      padding: calc(#{$textfield-box-padding-y-lg} - #{$textfield-border-width}) $textfield-box-padding-x-lg;
    }
  }

  &.form-control-sm {
    &[multiple],
    &[size]:not([size='1']) {
      padding: calc(#{$textfield-box-padding-y-sm} - #{$textfield-border-width}) $textfield-box-padding-x-sm;
    }
  }
}

textarea {
  &.form-control {
    min-height: $textfield-height;
    //height: auto;

    &:not([rows='1']) {
      @extend %form-textarea;
    }
  }

  &.form-control-lg {
    min-height: $textfield-height-lg;

    &:not([rows='1']) {
      min-height: $textfield-box-height-lg;
      padding: calc(#{$textfield-box-padding-y-lg} - #{$textfield-border-width}) $textfield-box-padding-x-lg;
    }
  }

  &.form-control-sm {
    min-height: $textfield-height-sm;

    &:not([rows='1']) {
      min-height: $textfield-box-height-sm;
      padding: calc(#{$textfield-box-padding-y-sm} - #{$textfield-border-width}) $textfield-box-padding-x-sm;
    }
  }
}

// File
//
// Custom file input.

.custom-file {
  display: inline-block;
  height: $textfield-height;
  margin-bottom: 0;
  position: relative;
  width: 100%;
}

.custom-file-input {
  height: $textfield-height;
  margin: 0;
  opacity: 0;
  overflow: hidden;
  position: relative;
  width: 100%;
  z-index: 2;

  @include hover-focus {
    ~ .custom-file-label {
      border-bottom-color: $textfield-border-color-focus;
      box-shadow: inset 0 ($textfield-border-width-focus * -1) 0 ($textfield-border-width * -1) $textfield-border-color-focus;
    }
  }
}

.custom-file-label {
  @include text-truncate;
  @include transition-standard(border-color, box-shadow);

  border-bottom: $textfield-border-width solid $textfield-border-color;
  color: $textfield-hint-color;
  font-size: $textfield-font-size;
  height: $textfield-height;
  line-height: $textfield-line-height;
  overflow: hidden;
  padding: $textfield-padding-y ($material-icon-size + $selection-control-spacer-x) calc(#{$textfield-padding-y} - #{$textfield-border-width}) $textfield-padding-x;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;

  &::after {
    @include set-material-icons;

    content: $custom-file-button-icon;
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
  }
}

.custom-select {
  @extend %form-control;

  /* @extend %form-select;

  &[multiple],
  &[size]:not([size='1']) {
    @extend %form-textarea;
  } */
}

.custom-select-sm {
  // height: $custom-select-height-sm;
  font-size: $textfield-font-size-sm;
  line-height: $textfield-line-height-sm;
  padding: $textfield-padding-y-sm $textfield-select-bg-size calc(#{$textfield-padding-y-sm} - #{$textfield-border-width}) $textfield-padding-x-sm;

  &[multiple],
  &[size]:not([size='1']) {
    padding: calc(#{$textfield-box-padding-y-sm} - #{$textfield-border-width}) $textfield-box-padding-x-sm;
  }
}

.custom-select-lg {
  // height: $custom-select-height-lg
  font-size: $textfield-font-size-lg;
  line-height: $textfield-line-height-lg;
  padding: $textfield-padding-y-lg $textfield-select-bg-size calc(#{$textfield-padding-y-lg} - #{$textfield-border-width}) $textfield-padding-x-lg;

  &[multiple],
  &[size]:not([size='1']) {
    padding: calc(#{$textfield-box-padding-y-lg} - #{$textfield-border-width}) $textfield-box-padding-x-lg;
  }
}

.form-control-file {
  @extend %form-control;

  max-height: $textfield-height;
}

.form-control-range {
  display: block;
  width: 100%;
}

// Validation

@each $state, $data in $form-validation-states {
  @include form-validation-state($state, map-get($data, color), map-get($data, icon));
}

.form-control[class*='valid'] {
  padding-right: calc(1.5rem + 0.5rem);
}

@if ($enable-form-ripple) {
  // Line ripple + label color on focus
  [class*='form-ripple'] {
    &:focus-within label:not(.custom-control-label):not(.form-check-label):not(.btn) {
      color: selection-theme-color();
    }
  }

  [class*='form-ripple'],
  .floating-label {
    position: relative;

    &::before {
      background-color: selection-theme-color();
      content: '';
      height: $textfield-border-width * 2;
      position: absolute;
      // bottom: 0;
      left: 0;
      transform: scaleX(0);
      transition: transform 180ms $transition-timing-function-standard;
      width: 100%;
      will-change: transform;
      z-index: 3;
    }

    .form-control:focus {
      box-shadow: none;
    }
  }

  [class*='form-ripple']:focus-within::before {
    transform: scaleX(1);
  }

  // stylelint-disable-next-line
  .form-ripple::before {
    top: calc(57px - 2px);
  }

  .form-ripple-lg::before {
    top: calc(82px - 2px);
  }

  .form-ripple-sm::before {
    top: calc(53px - 2px);
  }

  .form-ripple-nolabel::before {
    top: calc(36px - 2px);
  }

  .form-ripple-lg-nolabel::before {
    top: calc(61px - 2px);
  }

  .form-ripple-sm-nolabel::before {
    top: calc(32px - 2px);
  }

  .form-ripple-bottom::before {
    bottom: 0 !important; // stylelint-disable-line declaration-no-important
  }
}
