.custom-control {
  display: block;
  min-height: ($font-size-base * $line-height-base);
  padding-left: ($selection-control-indicator-size + $selection-control-spacer-x);
  position: relative;

  + .custom-control {
    margin-top: $selection-control-spacer-y;
  }
}

.custom-control-inline {
  display: inline-flex;
  margin-right: ($selection-control-spacer-x * 2);

  + .custom-control-inline {
    margin-top: 0;
  }
}

// Base styles for custom control indicators

.custom-control-label {
  color: inherit;
  font-size: $font-size-base;
  line-height: inherit;
  margin-bottom: 0;
  user-select: none; // djibe addition

  &::after {
    color: $selection-control-color;
    position: absolute;
    top: (($font-size-base * $line-height-base - $selection-control-indicator-size) / 2);
    left: 0;
  }

  &::before {
    @include transition-standard(background-color, opacity, transform);

    background-color: currentColor;
    border-radius: 50%;
    color: $selection-control-color;
    content: '';
    display: block;
    height: ($selection-control-indicator-size * 2);
    margin-top: (($font-size-base * $line-height-base - $selection-control-indicator-size) / 2 + $selection-control-indicator-size / -2);
    margin-left: ($selection-control-indicator-size / -2);
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    transform: scale(.87, .87) translateZ(0);
    width: ($selection-control-indicator-size * 2);
  }
}

.custom-control-input {
  opacity: 0;
  position: absolute;
  z-index: -1;

  &:not([disabled]):hover {
    ~ .custom-control-label {
      cursor: pointer; // djibe addition
    }
  }

  &.focus,
  &:active {
    ~ .custom-control-label::before {
      opacity: $selection-control-radial-opacity;
      transform: scale(1, 1) translateZ(0);
    }
  }

  &:checked ~ {
    .custom-control-label {
      &::after {
        color: $selection-control-color-active;
      }

      &::before {
        background-color: $selection-control-color-active;
      }
    }
  }

  &:disabled ~ {
    .custom-control-label {
      color: $selection-control-color-disabled;

      &::after {
        color: $selection-control-color-disabled;
      }

      &::before {
        display: none;
      }
    }
  }
}

// Checkbox

.custom-checkbox {
  .custom-control-label::after {
    @include set-material-icons;

    content: $selection-control-checkbox-icon;
    line-height: 1;
    vertical-align: middle;
  }

  .custom-control-input {
    &:checked ~ .custom-control-label::after {
      content: $selection-control-checkbox-icon-checked;
    }

    &:indeterminate ~ .custom-control-label::after {
      content: $selection-control-checkbox-icon-indeterminate;
    }
  }
}

// Radio button

.custom-radio {
  .custom-control-label::after {
    @include set-material-icons;

    content: $selection-control-radio-icon;
    line-height: 1;
    vertical-align: middle;
  }

  .custom-control-input {
    &:checked ~ .custom-control-label::after {
      content: $selection-control-radio-icon-checked;
    }
  }
}

// switches
//
// Tweak a few things for switches

.custom-switch {
  padding-left: $selection-control-track-width + $selection-control-spacer-x;

  .custom-control-label {
    @include transition-standard(background-color);

    &::before {
      left: -($selection-control-indicator-size + $selection-control-gutter);
      width: $selection-control-indicator-size;
      pointer-events: all;
      border-radius: $selection-control-border-radius;
    }

    &::after {
      top: calc(#{(($font-size-base * $line-height-base - $selection-control-indicator-size) / 2)} + #{$selection-control-border-width * 2});
      left: calc(#{-($selection-control-indicator-size + $selection-control-gutter)} + #{$selection-control-border-width * 2});
      width: $selection-control-indicator-size;
      height: $selection-control-indicator-size;
      //background-color: $custom-control-indicator-border-color; test djibe
      border-radius: $selection-control-border-radius;
      //@include transition(transform .15s ease-in-out, $custom-forms-transition); remove djibe
      @include transition-standard(background-color, transform);
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: $selection-control-thumb-bg;
      transform: translateX($selection-control-track-width - $selection-control-indicator-size);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $selection-control-thumb-bg-disabled;
    }
  }
}
