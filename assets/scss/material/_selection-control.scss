// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control {
  display: block;
  min-height: $font-size-base * $line-height-base;
  padding-left: $selection-control-spacer-x + $selection-control-indicator-size;
  position: relative;
  z-index: 1;

  + .custom-control {
    margin-top: $selection-control-spacer-y;
  }
}

.custom-control-inline {
  align-items: center;
  display: inline-flex;
  margin-right: $selection-control-spacer-x * 2;

  + .custom-control-inline {
    margin-top: 0;
  }
}

// Base styles for custom control indicators

.custom-control-label {
  color: inherit;
  font-size: $font-size-body-2;
  letter-spacing: $letter-spacing-body-2;
  line-height: $line-height-body-2;
  margin-bottom: 0;
  //position: relative;
  user-select: none; // djibe addition
  vertical-align: top;

  // Background-color and (when enabled) gradient
  &::before {
    @include transition-control(background-color, opacity, transform);

    background-color: currentColor;
    border-radius: 50%;
    color: $selection-control-color;
    content: '';
    display: block;
    height: ($selection-control-indicator-size * 2);
    margin-top: (($font-size-base * $line-height-base - $selection-control-indicator-size) / 2 + $selection-control-indicator-size / -2);
    margin-left: ($selection-control-indicator-size / -2);
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    transform: scale(0.87, 0.87) translateZ(0);
    width: ($selection-control-indicator-size * 2);
  }

  // Foreground (icon)
  &::after {
    color: $selection-control-color;
    display: block;
    position: absolute;
    top: (($font-size-base * $line-height-base - $selection-control-indicator-size) / 2);
    left: 0;
  }
}

.custom-control-input {
  height: ($font-size-base * $line-height-base + $custom-control-indicator-size) / 2;
  opacity: 0;
  position: absolute;
  left: 0; // https://github.com/twbs/bootstrap/commit/b165aff2f779c831efd8b3484e3ea7bc1c8f8eb4
  width: $custom-control-indicator-size;
  z-index: -1;

  &[disabled] {
    ~ .custom-control-label {
      color: $selection-control-color-disabled;

      &::after {
        color: $selection-control-color-disabled;
      }

      &::before {
        display: none;
      }
    }
  }

  &:not([disabled]):hover {
    ~ .custom-control-label {
      cursor: pointer; // djibe addition
    }
  }

  &:active,
  &.focus {
    ~ .custom-control-label::before {
      opacity: $selection-control-radial-opacity;
      transform: scale(1, 1) translateZ(0);
    }
  }

  &:checked ~ {
    .custom-control-label {
      &::after {
        color: $selection-control-color-active;
      }

      &::before {
        background-color: $selection-control-color-active;
      }
    }
  }
}

// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  &.custom-control {
    align-items: center;
    display: flex;
  }

  .custom-control-label::after {
    @include set-material-icons;

    content: $selection-control-checkbox-icon;
    line-height: 1;
    vertical-align: middle;
  }

  .custom-control-input {
    &:checked ~ .custom-control-label::after {
      content: $selection-control-checkbox-icon-checked;
    }

    &:indeterminate ~ .custom-control-label::after {
      content: $selection-control-checkbox-icon-indeterminate;
    }

    &:indeterminate:not([disabled]) ~ .custom-control-label::after {
      color: $selection-control-color-active;
    }
  }
}

// Radio button

.custom-radio {
  .custom-control-label::after {
    @include set-material-icons;

    content: $selection-control-radio-icon;
    line-height: 1;
    vertical-align: middle;
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      content: $selection-control-radio-icon-checked;
      // background-image: $custom-radio-indicator-icon-checked;
    }
  }
}

// switches

.custom-switch {
  align-items: center;
  display: flex;
  flex-grow: 1;
  padding-left: 36px;

  .custom-control-label {
    flex: 1;

    // Slider Track
    &::before {
      background: $black; //rgba($black, $black-hint-opacity)
      border-radius: $custom-switch-height / 2;
      content: '';
      height: $custom-switch-height;
      opacity: $black-hint-opacity; // 1
      pointer-events: all;
      position: absolute;
      top: 15px; //15.5
      transform: none;
      transition: background-color $custom-switch-transition, transform $custom-switch-transition;
      width: $custom-switch-width;
      will-change: background-color, transform;
    }

    /* &:active::before {
      opacity: 1;
    } */

    // Slider
    &::after {
      background: $white;
      border-radius: 50%;
      box-shadow: $custom-switch-handle-shadow;
      content: '';
      height: $custom-switch-handle-width;
      position: absolute;
      left: -$custom-switch-width / 2;
      transform: translateX(0);
      transition: transform $custom-switch-transition, box-shadow $custom-switch-transition;
      width: $custom-switch-handle-width;
      will-change: box-shadow, transform;
    }
  }

  .custom-control-input {
    &:active ~ .custom-control-label::before {
      opacity: $black-hint-opacity;
    }

    &:checked ~ .custom-control-label {
      &::before {
        background: selection-theme-color(); // rgba(selection-theme-color(), $black-secondary-opacity);
        // opacity: 1;
      }

      &::after {
        background: selection-theme-color();
        transform: translateX($custom-switch-handle-width);
      }
    }

    // Hover
    &:not(:checked):not(:disabled) ~ .custom-control-label:hover::after {
      box-shadow: $custom-switch-handle-shadow, 0 0 0 $custom-switch-height rgba($black, $overlay-hover-white-opacity);
    }

    &:checked:not(:disabled) ~ .custom-control-label:hover::after {
      box-shadow: $custom-switch-handle-shadow, 0 0 0 $custom-switch-height rgba(selection-theme-color(), $overlay-activated-white-opacity);
    }

    // Focus
    &:not(:checked):focus ~ .custom-control-label::after {
      box-shadow: $custom-switch-handle-shadow, 0 0 0 $custom-switch-height rgba($black, $overlay-hover-colored-opacity);
    }

    &:checked:focus ~ .custom-control-label::after {
      box-shadow: $custom-switch-handle-shadow, 0 0 0 $custom-switch-height rgba(selection-theme-color(), $overlay-activated-white-opacity);
    }

    // stylelint-disable
    // Disabled unchecked switch Slider + Track
     &:disabled ~ .custom-control-label {
      &::before {
        background: $light-theme-1;
        display: block;
      }
      &::after {
        box-shadow: 0 3px 1px -2px rgba($black, 0.07), 0 2px 2px 0 rgba($black, 0.05), 0 1px 5px 0 rgba($black, 0.04); // 36% opacity on box-shadow
      }
    }

    // Disabled checked switch Slider + Track
    &:checked:disabled ~ .custom-control-label {
      &::before {
        background: mix(rgba(selection-theme-color(), $black-secondary-opacity), $white, $black-hint-opacity * 100%); // Workaround for RGBA to hex
      }

      &::after {
        background: mix(selection-theme-color(), $white, $black-hint-opacity * 100%); // Workaround for RGBA to hex
      }
    }
  }
}
